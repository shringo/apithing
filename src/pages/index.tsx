import { SignIn, SignInButton, SignOutButton, useUser } from "@clerk/clerk-react";
import { User } from "@clerk/nextjs/dist/types/server";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";

import { RouterOutputs, api } from "~/utils/api";

function PostToast() {
  const { user } = useUser();
  if(!user) return null;

  return (
    <div className="flex gap-4 w-full">
      <Image src={user.imageUrl} className="w-12 h-12 rounded-full" alt={user.username + "'s profile picture"} width={56} height={56}/>
      <input maxLength={255} minLength={5} placeholder="What the FUCK is happening?!?!?!??!" className="bg-transparent grow"></input>
    </div>
  )
}

function ProcessDate(post: PostUser) {
  const { createdAt } = post.post;
  const diff = Date.now() - createdAt.getTime();

  var msg = "";

  if(diff < 5 * 1000) msg = "Moments ago";
  else if(diff < 60 * 1000) msg = Math.round(diff / 1000) + " seconds ago";
  else if(diff < 60 * 60 * 1000) msg = Math.round(diff / 1000 / 60) + " minutes ago";
  else if(diff < 24 * 60 * 60 * 1000) msg = Math.round(diff / 1000 / 60 / 60) + " hours ago";
  else if(diff < 7 * 24 * 60 * 60 * 1000) msg = Math.round(diff / 1000 / 60 / 60 / 24) + " days ago";
  else if(diff < 30 * 7 * 24 * 60 * 60 * 1000) msg = Math.round(diff / 1000 / 60 / 60 / 24 / 7) + " weeks ago";
  else if(diff < 365 * 24 * 60 * 60 * 1000) msg = Math.round(diff / 1000 / 60 / 60 / 24 / 7 / 30) + " months ago";
  else msg = Math.round(diff / 1000 / 60 / 60 / 24 / 365) + " years ago";

  return (
    <span>{msg.startsWith('1') ? msg.replace("s ago", " ago") : msg}</span>
  )
}

type PostUser = RouterOutputs["post"]["getAll"][number];
function PostView(props: PostUser) {
  const { post, author } = props;
  return (
    <div className="flex gap-3 p-4 border-b border-slate-400" key={post.id}>
      <Image src={author.avatar} className="w-12 h-12 rounded-full" alt={author.avatar + "'s profile picture"} width={56} height={56}/>
      <div className="flex flex-col">
        <div className="flex text-slate-300 font-bold gap-1">
          <span>{'@' + author.username}</span>
          <span>â€¢</span>
          <ProcessDate {...props}/>
        </div>
        <span>{post.content}</span>
      </div>
    </div>
  );
}

export default function Home() {
  const user = useUser();
  const {data, isLoading} = api.post.getAll.useQuery();

  if(isLoading) return <div>Loading shit...</div>;

  if(!data) return <div>Error loading data...</div>;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="w-full md:max-w-2xl border-x h-full border-slate-400">
          <div className="border-b border-slate-400 p-4 flex gap-5">
            {
              user.isSignedIn ? 
              <PostToast></PostToast> : 
              <div className="flex justify-center">{user.isSignedIn ? <SignOutButton></SignOutButton> : <SignInButton></SignInButton>}</div>
            }
          </div>
          <div className="flex flex-col">
            {data.map((post) => (
              <PostView {...post} key={post.post.id}/>
            ))}
          </div>
        </div>
      </main>
    </>
  );
}
